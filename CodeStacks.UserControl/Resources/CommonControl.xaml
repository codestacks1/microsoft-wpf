<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--特效部分-->
    <DropShadowEffect x:Key="MouseOverEffect" Color="#686868" ShadowDepth="4"></DropShadowEffect>
    <DropShadowEffect x:Key="PressedEffect" Color="#686868" ShadowDepth="0"></DropShadowEffect>
   
    <!--动画部分-->
    <!--通道里飞入的按钮-->
    <Storyboard x:Key="showDW">
        <DoubleAnimation Storyboard.TargetName="buttongrid"
                        Storyboard.TargetProperty="RenderTransform.X"
                        From="-90" To="-20" Duration="0:0:0.3" >
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetName="buttongrid"
                         Storyboard.TargetProperty="RenderTransform.X"
                        To="0" BeginTime="0:0:0.3" Duration="0:0:0.1" >
        </DoubleAnimation>
    </Storyboard>

    <!--控件样式部分-->
    <Style x:Key="btnAddPassageWayStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="..\..\Images\通道栏下方添加删除修改按钮背景图标1.png"></ImageBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="华文细黑"></Setter>
        <Setter Property="Foreground" Value="LightGray"></Setter>
        <Setter Property="FontSize" Value="4"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="..\..\Images\通道栏下方添加删除修改按钮背景图标之最左侧点亮状态.png"></ImageBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--添加修改按钮-->
    <Style x:Key="btnModifyPassageWayStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="..\..\Images\通道栏下方添加删除修改按钮背景图标2.png"></ImageBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="华文细黑"></Setter>
        <Setter Property="Foreground" Value="LightGray"></Setter>
        <Setter Property="FontSize" Value="4"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="..\..\Images\通道栏下方添加删除修改按钮背景图标之中间点亮状态.png"></ImageBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--添加删除按钮-->
    <Style x:Key="btnDeletePassageWayStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="..\..\Images\通道栏下方添加删除修改按钮背景图标3.png"></ImageBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="华文细黑"></Setter>
        <Setter Property="Foreground" Value="LightGray"></Setter>
        <Setter Property="FontSize" Value="4"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="..\..\Images\通道栏下方添加删除修改按钮背景图标之最左侧点亮状态3.png"></ImageBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--照片查询选取照片按钮-->
    <Style x:Key="imgSpecifyQueryPhotoStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="..\..\Images\照片选取后背景.png"></ImageBrush>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="..\..\Images\照片选取后背景有文字.png"></ImageBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--转到按钮-->
    <Style x:Key="btnNoBackGroundStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="..\..\Images\抓拍识别区下方转到背景框未点亮状态.png"></ImageBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="华文细黑"></Setter>
        <Setter Property="FontSize" Value="4"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="..\..\Images\转到背景框.png"></ImageBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--普通的点击按钮-->
    <Style x:Key="btnStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Background" Value="#1f6e77"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Gray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--无边框按钮-->
    <Style x:Key="NoBorderButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.Effect>
                                <DropShadowEffect  Color="#686868" ShadowDepth="0"></DropShadowEffect>
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver"  Value="true">
                            <Setter Property="Effect" Value="{StaticResource MouseOverEffect}"></Setter>
                        </Trigger>
                        <Trigger  Property="IsPressed"  Value="true">
                            <Setter Property="Effect" Value="{x:Null}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--主菜单切换功能按钮-->
    <Style x:Key="MainWindowButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="150"></Setter>
        <Setter Property="Margin" Value="5"></Setter>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver"  Value="true">
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>
                        <Trigger  Property="IsChecked"  Value="true">
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="White"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--抓拍识别按钮-->
    <Style x:Key="CaptureRecordButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Margin" Value="1"></Setter>
        <Setter Property="Foreground" Value="#3E3E43"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd" CornerRadius="5" BorderThickness="2" BorderBrush="#3E3E43" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver"  Value="true">
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>
                        <Trigger  Property="IsChecked"  Value="true">
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="White"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--圆角输入框-->
    <Style x:Key="RadiusTextBox" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="#16E8FA"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#18BED7"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd" CornerRadius="5" BorderBrush="#18BED7" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <!--右键菜单-->
    <!--
    <Style x:Key="hello" TargetType="{x:Type ContextMenu}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.Effect>
                                <DropShadowEffect  Color="#686868" ShadowDepth="0"></DropShadowEffect>
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--扁平按钮-->
    <Style x:Key="MetorButton" TargetType="{x:Type Button}">
        <Setter Property="Background" >
            <Setter.Value>
                <ImageBrush ImageSource="..\..\Images\视频预览下.png"></ImageBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter TextBlock.FontSize="20" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.Effect>
                                <DropShadowEffect  Color="#686868" ShadowDepth="5"></DropShadowEffect>
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver"  Value="true">
                            <Setter Property="Effect" Value="{StaticResource MouseOverEffect}"></Setter>
                        </Trigger>
                        <Trigger  Property="IsPressed"  Value="true">
                            <Setter Property="Effect" Value="{x:Null}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ImageBrush ImageSource="../../Images/top-line.png" x:Key="thumbkey" />
    <!--表格信息的表头格式-->
    <ControlTemplate x:Key="tmpForThumbCmp" TargetType="{x:Type Thumb}">
        <Border Background="{StaticResource thumbkey}" Width="1" Height="14">
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type GridViewColumnHeader}" x:Key="MyCmpHeaderStyle">
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid Name="g" Background="#2b3135">
                        <Border Name="bd" Padding="{TemplateBinding Padding}" Height="37">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                            </ContentPresenter>
                        </Border>
                        <Thumb Template="{StaticResource ResourceKey=tmpForThumbCmp}" HorizontalAlignment="Right" Height="16" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--下拉选项卡-->
    <Style TargetType="ToggleButton" x:Key="ComboxStyleBtn1">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Back" Background="Transparent" BorderThickness="0" BorderBrush="Transparent" Margin="0,0,0,0">
                        <Path Name="PathFill" Fill="#27A5Db" Width="14" Height="12" StrokeThickness="1.5" Stroke="#27A5Db" Opacity="0.5" Data="M5,0 L10,10 L0,10 z" 
                              HorizontalAlignment="Right"    RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="180"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="Transparent"></Setter>
                            <Setter TargetName="Back" Property="Background" Value="Transparent"></Setter>
                            <Setter TargetName="Back" Property="BorderBrush" Value="#326A79"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--叉按钮-->
    <Style x:Key="btnCloseStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="..\..\Images\叉.png"></ImageBrush>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="FontFamily" Value="华文细黑"></Setter>
        <Setter Property="FontSize" Value="4"></Setter>-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="..\..\Images\叉1.png"></ImageBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
        
    <!--数据模版部分-->
    <!--抓拍照片数据模版-->
    <DataTemplate x:Key="CaptureDataTemplate">
        <Grid Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" ></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Image Grid.Row="0" Width="{Binding ActualWidth}" Height="{Binding ActualHeight}" 
                   Stretch="Fill" x:Name="MeetingGroup_Image" 
                   Source="{Binding img}"></Image>
            <TextBlock Foreground="White" Grid.Row="1"  FontSize="18" x:Name="MeetingGroup_TextBlock" 
                       HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding ChannelName}" />
            <!--<TextBlock Foreground="White" Grid.Row="2" FontSize="20" VerticalAlignment="Center" Text="{Binding time}"></TextBlock>-->
        </Grid>
    </DataTemplate>

    <!--通道数据模版-->
    <DataTemplate x:Key="ChannelManageDataTemplate">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="10"></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition Height="10"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition Width="80"></ColumnDefinition>
                <ColumnDefinition Width="10"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Image  Grid.Row="1" Grid.Column="1" Width="20" x:Name="MeetingGroup_Image"  Source="..\..\Images\通道栏左侧摄像机未点亮状态.png"></Image>
            <TextBlock Margin="10,0,0,0" Foreground="White" Grid.Row="1" Grid.Column="2" FontSize="20" x:Name="MeetingGroup_TextBlock" VerticalAlignment="Center" Text="{Binding MyChannelCfg.Name}"></TextBlock>
            <Grid Visibility="Hidden" x:Name="buttongrid" Grid.Column="3" Grid.ColumnSpan="2" Grid.RowSpan="3">
                <Grid.RenderTransform>
                    <TranslateTransform X="0"></TranslateTransform>
                </Grid.RenderTransform>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button  Style="{StaticResource MetorButton}"  >修</Button>
                <Button Style="{StaticResource MetorButton}"   Grid.Column="2">删</Button>
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <!--<DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}}}" Value="True">
                <Setter TargetName="buttongrid" Property="Visibility" Value="Visible"></Setter>
            </DataTrigger>-->
            <DataTrigger Binding="{Binding IsOpened}" Value="true">
                <Setter TargetName="MeetingGroup_Image" Property="Source" Value="..\..\Images\通道栏左侧摄像机点亮状态.png"></Setter>
            </DataTrigger>
            <!--<EventTrigger RoutedEvent="{Binding Path=Selected, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}}}" >
                <BeginStoryboard Storyboard="{StaticResource showDW}">
                </BeginStoryboard>
            </EventTrigger>-->
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>